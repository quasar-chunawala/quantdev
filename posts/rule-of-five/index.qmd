---
title: "Rule of Five"
author: "Quasar"
date: "2024-12-27"
categories: [C++]      
image: "cpp.jpg"
toc: true
toc-depth: 3
format:
    html:
        code-tools: true
        code-block-border-left: true
        code-annotations: below
        highlight-style: pygments
---

# Introduction

The [rule-of-five](https://en.cppreference.com/w/cpp/language/rule_of_three) states that, if a class `C` has one of **user-declared** 

- Destructor `~C`
- Copy constructor `C(const C&)`
- Copy assignment operator `C& operator=(const C&)`
- Move constructor `C(C&&)`
- Move assignment operator `C& operator=(C&&)`

it should declare all five special member functions.

User-declared `!=` User-provided. Any explicitly defaulted (`=default`) or deleted (`=delete`) functions count as user-declared. 

A function is *user-provided* if it is user-declared and not explicitly defaulted or deleted. 

# Hinnant Table

The infamous [Hinnant table](https://howardhinnant.github.io) elaborates the various special members implicitly generated by the compiler in the presence of **user-declared** special functions. 

![Hinnant table](hinnant.jpg)




