{
  "hash": "f7c104cfe94b687495d8e9e2eaba0a6c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"`numpy` and `pandas` CheatSheet\"\nauthor: \"Quasar\"\ndate: \"2025-03-06\"\ncategories: [Python]      \nimage: \"python.jpeg\"\ntoc: true\ntoc-depth: 3\nformat:\n    html:\n        code-tools: true\n        code-block-border-left: true\n        code-annotations: below\n        highlight-style: pygments\n---\n\n\n\n\n## `np.arange`\n\n`np.arange(start, stop, step)` returns evenly spaced values in a given interval.\n\n::: {#d5ea0cee .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\n\nnp.arange(0.0, 1.1, 0.1)\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\narray([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ])\n```\n:::\n:::\n\n\n## `np.zeros`\n\n::: {#15e0400c .cell execution_count=2}\n``` {.python .cell-code}\nnp.zeros(shape=(3,3))\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\narray([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])\n```\n:::\n:::\n\n\n## `np.zeros_like`\n\n::: {#a366e7d9 .cell execution_count=3}\n``` {.python .cell-code}\nx = np.array([\n    [1, 2, 3, 4],\n    [5, 6, 7, 8],\n    [9,10,11,12]\n])\n\nnp.zeros_like(x)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\narray([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0]])\n```\n:::\n:::\n\n\n## np.ones\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}