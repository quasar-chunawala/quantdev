---
title: "C++ Roadmap"
image: profile.jpg
about:
  template: trestles
---

If you're coming upto speed on modern C++, or preparing for technical-interviews, having a structured approach can be incredibly helpful. Most companies prefer strong critical thinking and basic knowledge over extensive knowledge and medium critical thinking, because software development needs constant learning. So its important to be really cracked at modern C++ language features and the standard library. 

Quant/quantitative developer roles are not just about doing math in a basement. You are expected to be a self-starter and quickly pick up a complex codebase. Strong coding, debugging skills, are therefore incredibly valuable in writing efficient code, or analysing a large codebase. 

I suggest the following critical path, a chronological sequence of resources that have helped me quickly come upto speed in a short span of time :

## Books

### Fundamentals.

- [Beginning C++23 from Beginner to Pro](https://www.amazon.co.uk/Beginning-C-23-Beginner-Pro/dp/1484293428/ref=sr_1_1?crid=30SEICORANU5I&dib=eyJ2IjoiMSJ9.OXqQaS_Dh0nnwOnx9XbtEyyRldMT5cLGQdAlwqoMDnlQK_cCa2wiTZxFnrh65OaO8UIZxKExSS5Cxqy7rtCSp6yV3HdoHS0_Bt-BrhYt8DfTIltz2Epj4uzGOjW-QwH4YtY-aBWfvOnqlyBMu2j89EwRwNubIufSABmUcn9WWK4.p3p_IFjaO3nvDIL89GeHOFafgQLd3qy2mvBiMy40m38&dib_tag=se&keywords=C%2B%2B+Ivor+Horton&qid=1746353713&sprefix=c%2B%2B+ivor+horton%2Caps%2C61&sr=8-1), by Ivor Horton and Peter Van Weert
- [C++ Move Semantics](https://www.amazon.co.uk/Move-Semantics-Complete-Guide-First/dp/3967309002/ref=sr_1_1?crid=26OTZ8VPU4MY0&dib=eyJ2IjoiMSJ9.zH9WXPrLouNCka7Ek-8HQ6uGTWtSIAwIUaP6OaNolPivwupIxb1eoBcsuAP-uNRZruex9pAPch8PdsCSbcUBspnT-S2Z-p9ewB2_ps3CfHU.vvdsIy2JAE9zvYs0wf6t39P85R9D83it1Ys8L2jPvsA&dib_tag=se&keywords=c%2B%2B+move+semantics&qid=1746353845&sprefix=Move+Semantic%2Caps%2C85&sr=8-1) by Nicolai M. Josuttis.
- [Concurrency in Action](https://www.amazon.co.uk/Concurrency-Action-2E-Anthony-Williams/dp/1617294691/ref=sr_1_1?crid=3CIQCM1R1ZAA9&dib=eyJ2IjoiMSJ9.JzfSHjBa27SHxMThyjSsO6xVXEAS8bQ3plQGBuyfS5fwlNIyFKKaVdCp0QJ6SzkmAdflzQs-sU12qoaTekHKwA.DyJTOEVEYioUWTCXgUcXRpbjrWeszYaUw-eomnWUPso&dib_tag=se&keywords=concurrency+in+action&qid=1746353986&sprefix=Concurrency+in+Action%2Caps%2C76&sr=8-1) by Anthony Williams.

### Specialized books.

#### Generic programming.
- [Template Metaprogramming with C++](https://www.amazon.co.uk/Template-Metaprogramming-everything-templates-metaprogramming/dp/1803243457/ref=sr_1_2?crid=3DNXQWT0H45NQ&dib=eyJ2IjoiMSJ9.r_LRDvda1g5Ae4wZVpKTfwvU5vxJNkTMckSB8a3qlJt2pJOj7r6qD9Uaivym9NS7uvfFPQtNPBsS9IVI-EVPSugGBuXRwfhKhSexTQjr366GE7zAS1HcycPPU25QRURklb2tUdUv8xpoV7wiEn8mRg.U5QirTECa0UhXQExyS2yvxC3k29yXYXZczgViAztxIQ&dib_tag=se&keywords=template+metaprogramming&qid=1746353886&sprefix=template+metaprogramming%2Caps%2C79&sr=8-2) by Mariuz Bancilla.

#### Memory Management.
- [C++ Memory Management](https://www.amazon.co.uk/Memory-Management-leaner-memory-management-techniques/dp/1805129805/ref=sr_1_1?crid=3JCLZE0SGVNUH&dib=eyJ2IjoiMSJ9.P1e3qZExK51E60ODmRPOJJR-7cqcPWoCSjIo-Xw98FzORvqrp8CrYjWI4e2VSFEtZ4eVrQeAgYIgzqtBGYupii1eXJQS6VS7e57uf-LThFt6AekTSerIxOwGOrWuU8ZAR0_Fo_sRB0KbJl1-DxVVzKWeWlZEWqnic1amvd21moDqgD74edMbB9ce9-nQEUm2lW1LT3geYV-z5np6LGvyU6O_JvR4Ier5qKEQxSrrSg4.bY9tVrrfhK-K4YrCggAFF5CsRe04XTjec3zIbfFs1vA&dib_tag=se&keywords=C%2B%2B+Memory+Management&qid=1746354160&sprefix=c%2B%2B+memory+management%2Caps%2C82&sr=8-1) by Patrice Roy.

#### Multithreaded and asynchronous programming.
- [Asynchronous Programming with C++](https://www.amazon.co.uk/Asynchronous-Programming-blazing-fast-multithreading-asynchronous/dp/1835884245/ref=sr_1_1?crid=XY0B4AYQCP3Z&dib=eyJ2IjoiMSJ9.ngcZ0NrfzQheqz9008Ze5MY433wjr0xD-P4RZWqAShKoRntBvpDvRqHO9vpe28Rk35tzeVnV1g_QWxglw2fSLkNU2NIGEueu4b8BNCJwrkKJ7pp92akKl1j5FAg9AMfeoWRlWlrJW-AQPgKFJS0PeRVZMUkuXgDjdtjceQnWE2vTucSncK-Z3-DVOvz6HXoFbuI0DdVtJ-AUHPQwhr1gRpBpyYnv4wd-AfajpcGKXe8.v5eLjLvxHgQw1RtXR6uGmsoC-bT2VTOGle6FmMCJF9A&dib_tag=se&keywords=Asynchronous+Programming+with+C%2B%2B&qid=1746354242&sprefix=asynchronous+programming+with+c%2B%2B%2Caps%2C74&sr=8-1) by Javier Reguera-Salgado and Juan Antonio Rufes.

## Technical Interviews

- [getcracked.io](https://getcracked.io/) - One of the best collections of clever C++ interview puzzles maintained and updated by [CodingJesus](https://www.youtube.com/@CodingJesus) that truly test C++, OS and computer architecture concepts at deeper-level.

## Blog-rolls worth reading

- [cppstories](https://www.cppstories.com/) - Excellent blog worth following for explorative learning with really cool toy examples by [Bartlomiej Filipek](https://www.linkedin.com/in/bartlomiejfilipek/) (or Bartek) from Krakow, Poland